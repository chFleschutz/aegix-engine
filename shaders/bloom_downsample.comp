#version 450

layout(local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 0, rgba16f) uniform writeonly image2D bloomMap;
layout(set = 0, binding = 1) uniform sampler2D bloomMipMap;

void main()
{
	ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
	vec2 texelSize = 1.0 / vec2(imageSize(bloomMap));
	vec2 uv = (vec2(pixelCoords) + 0.5) * texelSize;

	float xStep = texelSize.x;
	float yStep = texelSize.y;

	// Take 13 samples around the current texel (e)
	// a - b - c
	// - j - k -
	// d - e - f
	// - l - m -
	// g - h - i
	vec3 a = texture(bloomMipMap, vec2(uv.x - 2.0 * xStep, uv.y - 2.0 * yStep)).rgb;
	vec3 b = texture(bloomMipMap, vec2(uv.x,               uv.y - 2.0 * yStep)).rgb;
	vec3 c = texture(bloomMipMap, vec2(uv.x + 2.0 * xStep, uv.y - 2.0 * yStep)).rgb;

	vec3 d = texture(bloomMipMap, vec2(uv.x - 2.0 * xStep, uv.y)).rgb;
	vec3 e = texture(bloomMipMap, vec2(uv.x,               uv.y)).rgb;
	vec3 f = texture(bloomMipMap, vec2(uv.x + 2.0 * xStep, uv.y)).rgb;

	vec3 g = texture(bloomMipMap, vec2(uv.x - 2.0 * xStep, uv.y + 2.0 * yStep)).rgb;
	vec3 h = texture(bloomMipMap, vec2(uv.x,               uv.y + 2.0 * yStep)).rgb;
	vec3 i = texture(bloomMipMap, vec2(uv.x + 2.0 * xStep, uv.y + 2.0 * yStep)).rgb;

	vec3 j = texture(bloomMipMap, vec2(uv.x - xStep, uv.y - yStep)).rgb;
	vec3 k = texture(bloomMipMap, vec2(uv.x + xStep, uv.y - yStep)).rgb;

	vec3 l = texture(bloomMipMap, vec2(uv.x - xStep, uv.y + yStep)).rgb;
	vec3 m = texture(bloomMipMap, vec2(uv.x + xStep, uv.y + yStep)).rgb;

	// Apply weighted average
	//        | 1 - 2 - 1 |
	//        | - 4 - 4 - |
	// 1/32 * | 2 - 4 - 2 |
	//        | - 4 - 4 - |
	//        | 1 - 2 - 1 |
	vec3 bloomColor = (a + c + g + i) * 0.03125 + (b + d + f + h) * 0.0625 + (j + k + l + m) * 0.125 + e * 0.125;
	imageStore(bloomMap, pixelCoords, vec4(bloomColor, 1.0));
}